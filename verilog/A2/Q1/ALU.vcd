$date
	Tue Oct 31 21:32:18 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_t $end
$var wire 1 ! greaterthan $end
$var wire 1 " iszero $end
$var wire 1 # out $end
$var wire 1 $ overflow $end
$var wire 2 % shiftout [1:0] $end
$var reg 1 & A $end
$var reg 1 ' B $end
$var reg 5 ( control [4:0] $end
$scope module M1 $end
$var wire 1 ) A $end
$var wire 1 * B $end
$var wire 5 + control [4:0] $end
$var reg 1 , greaterthan $end
$var reg 1 - iszero $end
$var reg 1 . out $end
$var reg 1 / overflow $end
$var reg 2 0 shiftout [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 0
0/
1.
0-
0,
b1 +
1*
0)
b1 (
1'
0&
b10 %
0$
1#
0"
0!
$end
#10
1-
1"
b0 0
b0 %
0.
0#
b10100 (
b10100 +
1&
1)
#20
1/
1$
b11 (
b11 +
0&
0)
#30
1,
1!
b10000 (
b10000 +
0'
0*
1&
1)
#40
0,
0!
0-
0"
b10 0
b10 %
1.
1#
b10011 (
b10011 +
1'
1*
#50
b11001 (
b11001 +
0&
0)
#60
b1 0
b1 %
b11010 (
b11010 +
1&
1)
#70
1,
1!
0/
0$
b1000 (
b1000 +
0'
0*
#80
0,
0!
b1010 (
b1010 +
1'
1*
#90
