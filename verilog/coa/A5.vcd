$date
	Tue Oct 17 22:16:41 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module nbitAdder_t $end
$var wire 8 ! diff [7:0] $end
$var wire 8 " sum [7:0] $end
$var wire 8 # tempo [7:0] $end
$var reg 8 $ a [7:0] $end
$var reg 8 % b [7:0] $end
$scope module M1 $end
$var wire 8 & ans [7:0] $end
$var wire 8 ' borrow [7:0] $end
$var wire 8 ( carry1 [7:0] $end
$var wire 8 ) diff [7:0] $end
$var wire 8 * i1 [7:0] $end
$var wire 8 + i2 [7:0] $end
$var wire 8 , tempo [7:0] $end
$scope begin genblk1 $end
$scope begin genblk2 $end
$scope module M4 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 sum $end
$var wire 1 2 tmp1 $end
$var wire 1 3 tmp2 $end
$var wire 1 4 tmp3 $end
$scope module M1 $end
$var wire 1 - p $end
$var wire 1 . q $end
$var reg 1 5 crry $end
$var reg 1 6 sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 2 p $end
$var wire 1 / q $end
$var reg 1 7 crry $end
$var reg 1 8 sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk01 $end
$scope begin genblk3 $end
$scope module M3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$var wire 1 > tmp1 $end
$var wire 1 ? tmp2 $end
$var wire 1 @ tmp3 $end
$scope module M1 $end
$var wire 1 9 p $end
$var wire 1 : q $end
$var reg 1 A crry $end
$var reg 1 B sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 > p $end
$var wire 1 ; q $end
$var reg 1 C crry $end
$var reg 1 D sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk001 $end
$scope begin genblk3 $end
$scope module M3 $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 G cin $end
$var wire 1 H cout $end
$var wire 1 I sum $end
$var wire 1 J tmp1 $end
$var wire 1 K tmp2 $end
$var wire 1 L tmp3 $end
$scope module M1 $end
$var wire 1 E p $end
$var wire 1 F q $end
$var reg 1 M crry $end
$var reg 1 N sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 J p $end
$var wire 1 G q $end
$var reg 1 O crry $end
$var reg 1 P sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0001 $end
$scope begin genblk3 $end
$scope module M3 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 S cin $end
$var wire 1 T cout $end
$var wire 1 U sum $end
$var wire 1 V tmp1 $end
$var wire 1 W tmp2 $end
$var wire 1 X tmp3 $end
$scope module M1 $end
$var wire 1 Q p $end
$var wire 1 R q $end
$var reg 1 Y crry $end
$var reg 1 Z sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 V p $end
$var wire 1 S q $end
$var reg 1 [ crry $end
$var reg 1 \ sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00001 $end
$scope begin genblk3 $end
$scope module M3 $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 _ cin $end
$var wire 1 ` cout $end
$var wire 1 a sum $end
$var wire 1 b tmp1 $end
$var wire 1 c tmp2 $end
$var wire 1 d tmp3 $end
$scope module M1 $end
$var wire 1 ] p $end
$var wire 1 ^ q $end
$var reg 1 e crry $end
$var reg 1 f sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 b p $end
$var wire 1 _ q $end
$var reg 1 g crry $end
$var reg 1 h sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000001 $end
$scope begin genblk3 $end
$scope module M3 $end
$var wire 1 i a $end
$var wire 1 j b $end
$var wire 1 k cin $end
$var wire 1 l cout $end
$var wire 1 m sum $end
$var wire 1 n tmp1 $end
$var wire 1 o tmp2 $end
$var wire 1 p tmp3 $end
$scope module M1 $end
$var wire 1 i p $end
$var wire 1 j q $end
$var reg 1 q crry $end
$var reg 1 r sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 n p $end
$var wire 1 k q $end
$var reg 1 s crry $end
$var reg 1 t sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0000001 $end
$scope begin genblk3 $end
$scope module M3 $end
$var wire 1 u a $end
$var wire 1 v b $end
$var wire 1 w cin $end
$var wire 1 x cout $end
$var wire 1 y sum $end
$var wire 1 z tmp1 $end
$var wire 1 { tmp2 $end
$var wire 1 | tmp3 $end
$scope module M1 $end
$var wire 1 u p $end
$var wire 1 v q $end
$var reg 1 } crry $end
$var reg 1 ~ sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 z p $end
$var wire 1 w q $end
$var reg 1 !" crry $end
$var reg 1 "" sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00000001 $end
$scope begin genblk3 $end
$scope module M3 $end
$var wire 1 #" a $end
$var wire 1 $" b $end
$var wire 1 %" cin $end
$var wire 1 &" cout $end
$var wire 1 '" sum $end
$var wire 1 (" tmp1 $end
$var wire 1 )" tmp2 $end
$var wire 1 *" tmp3 $end
$scope module M1 $end
$var wire 1 #" p $end
$var wire 1 $" q $end
$var reg 1 +" crry $end
$var reg 1 ," sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 (" p $end
$var wire 1 %" q $end
$var reg 1 -" crry $end
$var reg 1 ." sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$scope module M5 $end
$var wire 1 /" a $end
$var wire 1 0" b $end
$var wire 1 1" cin $end
$var wire 1 2" cout $end
$var wire 1 3" sum $end
$var wire 1 4" tmp1 $end
$var wire 1 5" tmp2 $end
$var wire 1 6" tmp3 $end
$scope module M1 $end
$var wire 1 /" p $end
$var wire 1 0" q $end
$var reg 1 7" crry $end
$var reg 1 8" sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 4" p $end
$var wire 1 1" q $end
$var reg 1 9" crry $end
$var reg 1 :" sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk04 $end
$scope begin genblk8 $end
$scope module M6 $end
$var wire 1 ;" a $end
$var wire 1 <" b $end
$var wire 1 =" cin $end
$var wire 1 >" cout $end
$var wire 1 ?" sum $end
$var wire 1 @" tmp1 $end
$var wire 1 A" tmp2 $end
$var wire 1 B" tmp3 $end
$scope module M1 $end
$var wire 1 ;" p $end
$var wire 1 <" q $end
$var reg 1 C" crry $end
$var reg 1 D" sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 @" p $end
$var wire 1 =" q $end
$var reg 1 E" crry $end
$var reg 1 F" sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk004 $end
$scope begin genblk8 $end
$scope module M6 $end
$var wire 1 G" a $end
$var wire 1 H" b $end
$var wire 1 I" cin $end
$var wire 1 J" cout $end
$var wire 1 K" sum $end
$var wire 1 L" tmp1 $end
$var wire 1 M" tmp2 $end
$var wire 1 N" tmp3 $end
$scope module M1 $end
$var wire 1 G" p $end
$var wire 1 H" q $end
$var reg 1 O" crry $end
$var reg 1 P" sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 L" p $end
$var wire 1 I" q $end
$var reg 1 Q" crry $end
$var reg 1 R" sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0004 $end
$scope begin genblk8 $end
$scope module M6 $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 U" cin $end
$var wire 1 V" cout $end
$var wire 1 W" sum $end
$var wire 1 X" tmp1 $end
$var wire 1 Y" tmp2 $end
$var wire 1 Z" tmp3 $end
$scope module M1 $end
$var wire 1 S" p $end
$var wire 1 T" q $end
$var reg 1 [" crry $end
$var reg 1 \" sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 X" p $end
$var wire 1 U" q $end
$var reg 1 ]" crry $end
$var reg 1 ^" sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00004 $end
$scope begin genblk8 $end
$scope module M6 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 a" cin $end
$var wire 1 b" cout $end
$var wire 1 c" sum $end
$var wire 1 d" tmp1 $end
$var wire 1 e" tmp2 $end
$var wire 1 f" tmp3 $end
$scope module M1 $end
$var wire 1 _" p $end
$var wire 1 `" q $end
$var reg 1 g" crry $end
$var reg 1 h" sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 d" p $end
$var wire 1 a" q $end
$var reg 1 i" crry $end
$var reg 1 j" sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk000004 $end
$scope begin genblk8 $end
$scope module M6 $end
$var wire 1 k" a $end
$var wire 1 l" b $end
$var wire 1 m" cin $end
$var wire 1 n" cout $end
$var wire 1 o" sum $end
$var wire 1 p" tmp1 $end
$var wire 1 q" tmp2 $end
$var wire 1 r" tmp3 $end
$scope module M1 $end
$var wire 1 k" p $end
$var wire 1 l" q $end
$var reg 1 s" crry $end
$var reg 1 t" sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 p" p $end
$var wire 1 m" q $end
$var reg 1 u" crry $end
$var reg 1 v" sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk0000004 $end
$scope begin genblk8 $end
$scope module M6 $end
$var wire 1 w" a $end
$var wire 1 x" b $end
$var wire 1 y" cin $end
$var wire 1 z" cout $end
$var wire 1 {" sum $end
$var wire 1 |" tmp1 $end
$var wire 1 }" tmp2 $end
$var wire 1 ~" tmp3 $end
$scope module M1 $end
$var wire 1 w" p $end
$var wire 1 x" q $end
$var reg 1 !# crry $end
$var reg 1 "# sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 |" p $end
$var wire 1 y" q $end
$var reg 1 ## crry $end
$var reg 1 $# sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk00000004 $end
$scope begin genblk7 $end
$scope module M6 $end
$var wire 1 %# a $end
$var wire 1 &# b $end
$var wire 1 '# cin $end
$var wire 1 (# cout $end
$var wire 1 )# sum $end
$var wire 1 *# tmp1 $end
$var wire 1 +# tmp2 $end
$var wire 1 ,# tmp3 $end
$scope module M1 $end
$var wire 1 %# p $end
$var wire 1 &# q $end
$var reg 1 -# crry $end
$var reg 1 .# sum2 $end
$upscope $end
$scope module M2 $end
$var wire 1 *# p $end
$var wire 1 '# q $end
$var reg 1 /# crry $end
$var reg 1 0# sum2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
10#
0/#
1.#
0-#
0,#
0+#
1*#
1)#
0(#
0'#
0&#
1%#
1$#
0##
1"#
0!#
0~"
0}"
1|"
1{"
0z"
0y"
1x"
0w"
1v"
0u"
1t"
0s"
0r"
0q"
1p"
1o"
0n"
0m"
1l"
0k"
1j"
0i"
1h"
0g"
0f"
0e"
1d"
1c"
0b"
0a"
1`"
0_"
1^"
0]"
1\"
0["
0Z"
0Y"
1X"
1W"
0V"
0U"
1T"
0S"
1R"
0Q"
1P"
0O"
0N"
0M"
1L"
1K"
0J"
0I"
1H"
0G"
1F"
0E"
1D"
0C"
0B"
0A"
1@"
1?"
0>"
0="
0<"
1;"
1:"
09"
18"
07"
06"
05"
14"
13"
02"
01"
10"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
1P
0O
0N
0M
0L
0K
0J
1I
0H
1G
0F
0E
0D
0C
0B
1A
0@
1?
0>
0=
1<
0;
1:
19
08
07
06
05
04
03
02
01
00
0/
0.
0-
bz ,
b10 +
b10 *
b11111111 )
b10 (
b0 '
b100 &
b10 %
b10 $
bz #
b100 "
b11111111 !
$end
#10
1(#
1/#
1,#
00#
0)#
1'#
1z"
0P
0I
1##
1~"
0$#
0{"
0^"
0W"
0G
1="
1y"
1\
1U
0\"
0X"
18
11
0<
b0 (
1D
1=
1t
1m
b101011 "
b101011 &
12"
0:"
03"
1F"
1?"
1n"
b11100001 '
0v"
0o"
b10110 !
b10110 )
1Z
1V
0T"
16
12
0A
0?
1B
1>
1r
1n
17"
15"
08"
04"
0D"
0@"
1s"
1q"
0t"
0p"
1R
1-
09
1i
1/"
0;"
1k"
b1010 %
b1010 +
b100001 $
b100001 *
#20
0'#
0z"
0##
0~"
1$#
1{"
0y"
0n"
1v"
1o"
1""
1y
1w
0R"
0K"
0u"
0r"
1k
0m"
1P
1I
1l
1t
1m
1."
1'"
b11101111 "
b11101111 &
0P"
0L"
0s"
0q"
1t"
1p"
0/#
0,#
00#
0)#
1`
b110000 (
0b"
b10000001 '
1j"
1c"
b1110010 !
b1110010 )
1N
1J
1q
1o
0r
0n
1,"
1("
0H"
0`"
0l"
1-#
1+#
0.#
0*#
1e
1c
0g"
0e"
1h"
1d"
1F
1^
1j
1$"
1&#
1]
1_"
b10111110 %
b10111110 +
b110001 $
b110001 *
#30
